"use strict";
exports.__esModule = true;
var src_1 = require("../src");
var BASIC = "\n1 package active dry yeast\n2-1/4 cups warm water\n1 tablespoon salt\n6-1/4 cups bread flour\n2 tablespoons canola oil\n3 tablespoons sugar";
var COMPLEX = "1 cup milk\n1/2 cup sour cream\n1/4 cup granulated sugar\n2 large eggs\n1 teaspoon vanilla extract\n1 1/2 cups all purpose flour\n2 teaspoons baking powder\n1 teaspoon salt\nButter for greasing the pan";
var BAD = "\n1/2 cup m<div>milk&&#$jkf</div>\n1/4 cup @#*(&)@#*@fdjkfhgkdhvsuga@#(&@*#@)\n2 large@#(&@*#@) eggs@#(&@*#@)\n1 <div></div><div></div><div></div>teaspoon vanilla extract";
describe('Given a full recipe', function () {
    var recipe = (0, src_1.makeIngredientArray)((0, src_1.splitInput)(BASIC));
    test('it returns an array of the correct length', function () {
        expect(recipe.length).toBe(6);
    });
    test('it parses the first ingredient correctly', function () {
        var ing = recipe[0];
        expect(ing.amount).toBe(1);
        expect(ing.unit).toBeUndefined();
        expect(ing.name).toBe('package active dry yeast');
    });
    test('it parses the second ingredient correctly', function () {
        var ing = recipe[1];
        expect((0, src_1.getAmountInUnit)(ing.amount, ing.unit)).toBe(2.25);
        expect(ing.unit).toMatchObject(src_1.UNITS.CUP);
        expect(ing.name).toBe('warm water');
    });
    test('it parses the third ingredient correctly', function () {
        var ing = recipe[2];
        expect((0, src_1.getAmountInUnit)(ing.amount, ing.unit)).toBe(1);
        expect(ing.unit).toMatchObject(src_1.UNITS.TABLESPOON);
        expect(ing.name).toBe('salt');
    });
    test('it parses the fourth ingredient correctly', function () {
        var ing = recipe[3];
        expect((0, src_1.getAmountInUnit)(ing.amount, ing.unit)).toBe(6.25);
        expect(ing.unit).toMatchObject(src_1.UNITS.CUP);
        expect(ing.name).toBe('bread flour');
    });
    test('it parses the fifth ingredient correctly', function () {
        var ing = recipe[4];
        expect((0, src_1.getAmountInUnit)(ing.amount, ing.unit)).toBe(2);
        expect(ing.unit).toMatchObject(src_1.UNITS.TABLESPOON);
        expect(ing.name).toBe('canola oil');
    });
    test('it parses the final ingredient correctly', function () {
        var ing = recipe[5];
        expect((0, src_1.getAmountInUnit)(ing.amount, ing.unit)).toBe(3);
        expect(ing.unit).toMatchObject(src_1.UNITS.TABLESPOON);
        expect(ing.name).toBe('sugar');
    });
});
describe('Given recipes with fractional and composite ingredients', function () {
    var recipe = (0, src_1.makeIngredientArray)((0, src_1.splitInput)(COMPLEX));
    test('it returns an array with expected length', function () {
        expect(recipe.length).toBe(8);
    });
});
describe('Given bad recipe input (this will show errors to console)', function () {
    test.skip('it does not fail and returns an array of ingredeints (this will show errors to console)', function () {
        var recipe = (0, src_1.makeIngredientArray)((0, src_1.splitInput)(BAD));
        expect(recipe).toBeTruthy();
    });
});
//# sourceMappingURL=makeIngredientArray.test.js.map