"use strict";
exports.__esModule = true;
exports.formatFraction = exports.formatAmount = void 0;
var constants_1 = require("./constants");
function formatAmount(amount, format) {
    if (format === void 0) { format = true; }
    var string = formatAmountString(amount);
    if (format) {
        return formatFraction(string);
    }
    return string;
}
exports.formatAmount = formatAmount;
function formatAmountString(amount) {
    return parseFloat(amount.toFixed(2)).toString();
}
function formatFraction(amount) {
    var decimalPoint = getDecimalIndex(amount);
    if (decimalPoint) {
        var whole = amount.slice(0, decimalPoint);
        var float = parseFloat("0.".concat(amount.slice(decimalPoint + 1)));
        for (var _i = 0, _a = Object.entries(constants_1.FRACTIONS); _i < _a.length; _i++) {
            var _b = _a[_i], fraction = _b[0], range = _b[1];
            if (inRange(float, range.min, range.max)) {
                if (fraction.length === 1) {
                    return "".concat(Number(whole) + Number(fraction));
                }
                return whole && whole !== '0' ? "".concat(whole, " ").concat(fraction) : fraction;
            }
        }
    }
    return amount;
}
exports.formatFraction = formatFraction;
function inRange(x, min, max) {
    return x >= min && x <= max;
}
function getDecimalIndex(amount) {
    var _a, _b;
    var regex = /\./gi;
    return (_b = (_a = regex.exec(amount)) === null || _a === void 0 ? void 0 : _a.index) !== null && _b !== void 0 ? _b : false;
}
//# sourceMappingURL=formatAmount.js.map